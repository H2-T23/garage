// memo.txt 


■[OpenGL 3つの座標系」

①座標系での変換を表すOpenGLの行列
	OpenGLでは「変換行列」を管理しています。
	「カレントの変換行列」をしていするには"glMatrixMode"を使います。
	この関数の引数にGL_MODELVIEWを指定すると「モデル座標系での頂点の指定」を意味し、
	「ワールド座標系での幾何変換」「視点位置と姿勢を指定してワールド座標系からカメラ座標系への座標変換」
	ができます。
	GL_PROJECTIONを指定すると「投影変換行列」を設定できます。
	

②モデル座標系
	モデル座標系とは、描画対象となる物体を考える座標系です。
	描画する物体の頂点は、「モデル座標系」で考えます。
	「モデル座標系」はローカル座標系とも言います。

	「頂点」は描画する物体の「重心」付近に置かれます。
	つまり、「モデル座標系」では物体の頂点は「原点」を中心に考えるのが一般的です。
	しかし、描画するシーンの中では、必ずしも、原点付近に描画する物体があるとは限りません。
	そこで出てくるのがワールド座標系です。

③ワールド座標系
	ワールド座標系は描画する物体や視点を配置する座標系です。
	OpenGLの「モデル・ビュー変換行列」を指定するときには「ワールド座標系」の中での、
	描画する物体や視点の位置を考えます。

④カメラ座標系
	カメラ座標系は視点位置に原点を置く座標系です。
	カメラ座標系はカメラに固定された座標系といえます。

	OpenGLの「モデル・ビュー変換行列」ではワールド座標系に視点を置くことは、
	シーン内のすべての物体を視点位置の反対に移動することと同じと考えられます。
	たとえば、視点位置を（１，２，３）に置くことは、シーン内のすべての物体を（－１、－２、－３）だけ
	移動してやることと同じと考えます。
	したがって、ワールド座標系内で視点位置を指定することによって、
	シーン内にあるすべての物体の座標は「カメラ座標系」での座標に変換されます。

	「モデル・ビュー変換行列」ですべての物体を「カメラ座標系」に変換した後、
	投影変換行列で投影変換を行い、その結果を「ビュー・ポート」に表示します。
	「ワールド座標系」内での物体の「移動、回転、拡大・縮小」変換と、
	視点位置を指定してすべての物体を「カメラ座標系」に変換する変換行列が「モデル・ビュー変換行列」です。
	それをさらに、２次元の画像として「ビュー・ポート」内に表示するために、投影変換する行列が「投影変換行列」です。


■「モデル座標系」の詳細

①OpenGLでモデル座標系はどのような意味をもつか
	モデル座標系は描画する物体の頂点を指定するための座標系です。
	たとえば、物体の重心を原点とする座標系を考えて、立方体の８つの頂点を指定することができます。
	第４章で立方体を３次元空間内で考えて描画したときには、
	下図のように、「頂点」は原点を重心にもち、各座標軸が立方体の面に平行な「モデル座標系」で考えました。

②OpenGLでモデル座標系を扱う方法
	OpenGLでモデル座標系で考えて頂点を指定するときは、
	「glMatrixMode」では「GL_MODELVIEW」を指定しておきます。
	そして、「頂点」を指定した後に、次の章で解説する「幾何変換」で、
	描画対象をワールド座標系内に配置します。

■「ワールド座標系」の詳細

①OpenGLでワールド座標系はどのような意味をもつか
	ワールド座標系は、シーン内にすべての描画対象を配置するための座標系です。
	いったん「モデル座標系」の中で描画する物体の「頂点」の座標を指定してやれば、
	それを、次の章で解説する「幾何変換」によって、自由に移動、回転、拡大・縮小して、
	ワールド座標系の中に配置してやることができます。

	これらの「幾何変換」を使えば、描画対象を自由に動かして、
	アニメーション表示することも可能です。
	こうした、自由な移動、回転、拡大・縮小をするために、
	「モデル座標系」と「ワールド座標系」を分けて考えるわけです。

②OpenGLでワールド座標系を扱う方法
	OpenGLの「ワールド座標系」を扱う場合は、
	「glMatrixMode」に「GL_MODELVIEW」を指定します。
	ただし、視点位置と姿勢の指定によるワールド座標系からカメラ座標系への変換行列と分けるため、
	スタックを１つプッシュして次の新しい階層の行列を使った方がいい場合があります。


■「カメラ座標系」の詳細
	ここでは、OpenGLの「カメラ座標系」と「投影変換」について詳しく説明します。
	「カメラ座標系」について説明する前に、まず、「ウィンドウ座標系」とその中での
	「ビュー・ポート」の設定について説明します。
	その後「投影変換」を開設します。
	これはワールド座標系からカメラ座標系に変換した描画シーンを２次元の画像として
	「ビュー・ポート」にマッピングする変換です。

①ウィンドウ座標系
	ウィンドウ座標系とは、コンピュータのディスプレイ上に表示されるウィンドウ上の２次元の座標系です。
	通常はWindowsでは、ウィンドウの左上を原点とし、右方向を「+X」、下方向を「+Y」とします。
	しかし、OpenGLの「ビュー・ポート」を設定するときは、ウィンドウの左下を原点とし、
	右方向を「+X」、上方向を「+Y」とします。

②ビュー・ポート
	ビュー・ポートとは、OpenGLで描画した３次元CG画像を表示する、ウィンドウ上の領域です。
	OpenGLで生成した３次元CG画像をウィンドウ上のどの領域に表示するかを決定します。
	ウィンドウ上に任意の矩形領域を決めて、そこに、３次元CG画像を表示することができます。

	OpenGLでビュー・ポートを設定するには、「glViewport」を使います。
	glViewportにはビュー・ポートの位置として、ビュー・ポート左下の点の
	「x座標とy座標」を、また、ビュー・ポートのサイズとしてビュー・ポートの「幅と高さ」を、
	それぞれ、ピクセルを単位として引数に設定します。
	



j
「１．ワールド座標系と幾何学変換」
	幾何変換は、ワールド座標系の中で行われます。
	ワールド座標系内の変換行列を設定するには、OpenGLのカレントの行列はモデル・ビュー変換行列にしておきます。
	それには、glMatrixModeにGL_MODELVIEWを指定してお呼び出します。
	その後、行列スタックに新しい行列をプッシュします。
	これには、glPushMatrixを使います。
	これは視点の位置と姿勢を設定した変換行列と幾何変換の変換行列を区別するためです。
	幾何変換と頂点の指定による描画を行い、最後に行列スタックをglPopMatrixでポップして戻します。

「２．移動変換」

	①移動変換とは
	移動変換はモデル座標系で頂点を定義した描画対象をワールド座標系内の任意の場所に移動する変換です。
	最初、モデル座標系とワールド座標系は一致しています。
	描画対象の重心が「原点」にあるとします。
	「移動変換」をする前は描画対象の重心はワールド座標系内でも原点にあります。
	それをワールド座標系内の点(tx, ty, tz)に移動したいとします。
	そのとき、描画対象をX方向にtx、Y方向にty、Z方向にtzだけ移動変換すると、
	描画対象の重心は点(tx,ty,tz)に一致するようになります。

	②移動変換を表すOpenGL関数
	OpenGLで移動変換を設定する関数はglTranslatefです。
	この関数は、移動したい移動量の「x座標値,y座標値,z座標値」の３つの引数をもちます。
	ワールド座標系内で、原点から点(tx,ty,tz)に移動したときは、「」を引数として設定します。

	glTranslatefを使うときは、OpenGLの管理するカレントの行列は、モデル・ビュー変換行列としておきます。
	glMatrixModeにGL_MODELVIEWを指定して呼び出します。
	そして、glPushMatrixでスタックに新しい行列を設定します。
	これは視点の位置と姿勢を設定した行列に「移動変換の行列」が上書きされないようにするためです。
	OpenGLのこの行列にglTranslatefで移動変換行列を設定し、その後、頂点を指定して描画します。
	最後にglPopMatrixでスタックを元に戻します。




「６．変換行列を設定する方法」

	①変換行列を設定する方法
	OpenGLでカレントの変換行列に自分で作った行列を設定するにはglLoadMatrixfという関数を使います。
	変換行列は16の要素をもつfloatの1次元配列で設定します。
	この配列は、下図のように、まず、列がきまり、次に行が決まるように設定していきます。
	
		| mat[ 0] mat[ 4] mat[ 8] mat[12] |
		| mat[ 1] mat[ 5] mat[ 9] mat[13] |
		| mat[ 2] mat[ 6] mat[10] mat[14] |
		| mat[ 3] mat[ 7] mat[11] mat[15] |

	②現在の変換行列に新しい変換行列を掛ける方法
	カレントの変換行列を直接設定するには



